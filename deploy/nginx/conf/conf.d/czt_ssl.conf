server {
    server_name metrics.*;
    listen 443 ssl;


    ssl_certificate "/etc/nginx/certs/irk-31435-119.crt";
    ssl_certificate_key "/etc/nginx/certs/irk-31435-119.key";
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLEsl_session_cache shared:SSL:1m;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    location / {
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection $connection_upgrade;
        proxy_pass         http://127.0.0.1:3000$request_uri;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
    }
}

server {
    server_name portainer.*;
    listen 443 ssl;


    ssl_certificate "/etc/nginx/certs/irk-31435-119.crt";
    ssl_certificate_key "/etc/nginx/certs/irk-31435-119.key";
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLEsl_session_cache shared:SSL:1m;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    location / {
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection $connection_upgrade;
        proxy_pass         https://127.0.0.1:9443$request_uri;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
    }
    
}

server {
    server_name db.*;
    listen 443 ssl;


    ssl_certificate "/etc/nginx/certs/irk-31435-119.crt";
    ssl_certificate_key "/etc/nginx/certs/irk-31435-119.key";
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLEsl_session_cache shared:SSL:1m;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    location / {
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection $connection_upgrade;
        proxy_pass         http://127.0.0.1:8080$request_uri;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
    }
}

server {
    server_name home.*;
    listen 443 ssl;


    ssl_certificate "/etc/nginx/certs/irk-31435-119.crt";
    ssl_certificate_key "/etc/nginx/certs/irk-31435-119.key";
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLEsl_session_cache shared:SSL:1m;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    location / {
        proxy_pass         http://glance$request_uri;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        proxy_redirect http:// https://;

        expires max;
        add_header Cache-Control "public, no-transform";
        access_log off;
    }
}

server {
    server_name kafka.*;
    listen 443 ssl;


    ssl_certificate "/etc/nginx/certs/irk-31435-119.crt";
    ssl_certificate_key "/etc/nginx/certs/irk-31435-119.key";
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLEsl_session_cache shared:SSL:1m;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    location / {
        proxy_pass         http://kafka$request_uri;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        proxy_redirect http:// https://;

        expires max;
        add_header Cache-Control "public, no-transform";
        access_log off;
    }
}

server {
    server_name resource.*;
    listen 443 ssl;
    ssl_certificate "/etc/nginx/certs/irk-31435-119.crt";
    ssl_certificate_key "/etc/nginx/certs/irk-31435-119.key";
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    location /auth {
        if ($is_options) {
           return 200;
        }
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection $connection_upgrade;
        proxy_pass         http://auth-app$request_uri;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        proxy_redirect http:// https://;
    }

    location /gateway {
        if ($is_options) {
           return 200;
        }
        proxy_pass         http://gateway-app$request_uri;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        proxy_redirect http:// https://;
    }

    location /fs {
        if ($is_options) {
           return 200;
        }
        proxy_pass         http://fs-app$request_uri;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        proxy_redirect http:// https://;
    }

    location /pn {
        if ($is_options) {
           return 200;
        }
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection $connection_upgrade;
        proxy_pass         http://pn-app$request_uri;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        proxy_redirect http:// https://;
    }    
}
